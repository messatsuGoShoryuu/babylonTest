import { AbstractMesh, Scene, Vector3 } from "babylonjs";
import CarEngine from "./carEngine";
export default class Car {
    constructor(meshes: Array<AbstractMesh>, name: string, engine: CarEngine, scene: Scene);
    initializePhysics(scene: Scene): void;
    accelerate(value: boolean): void;
    brake(value: boolean): void;
    steer(direction: number): void;
    private resetRotations;
    private applyWheelAxisRotations;
    private rotateWheels;
    updatePhysics(dt: number, gravity: Vector3): void;
    private applyAccelerationMomentum;
    private applySteeringPhysics;
    private rollFromG;
    private findImaginaryPivot;
    readonly transform: AbstractMesh;
    private m_name;
    private m_meshes;
    private m_meshRoot;
    private m_frontLeftWheel;
    private m_frontRightWheel;
    private m_frontLeftWheelAxis;
    private m_frontRightWheelAxis;
    private m_carBodyRoll;
    private m_carBodyPitch;
    private m_backWheels;
    private m_physicsRoot;
    private m_velocity;
    private m_lastPosition;
    private m_imaginaryNode;
    private m_debugPivot;
    private m_turnG;
    private m_rollAngle;
    private m_pitchAngle;
    private m_engine;
}
